{"version":3,"sources":["components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Button/Button.jsx","FeedbackOptions/FeedbackOptions.jsx","App.js","index.js","components/Button/Button.module.css"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Button","text","type","onClick","className","s","button","name","toUpperCase","slice","FeedbackOptions","options","onLeaveFeedback","map","opt","App","useState","setGood","setNeutral","setBad","TotalFeedback","e","target","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCOQC,MAXf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,sDAAyBC,EAAzB,Y,gBCNS,SAASC,EAAT,GAA0C,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC3C,OACE,wBAAQC,UAAWC,IAAEC,OAAQJ,KAAMA,EAAMK,KAAMN,EAAME,QAASA,EAA9D,SACGF,EAAK,GAAGO,cAAgBP,EAAKQ,MAAM,KCH3B,SAASC,EAAT,GAA8D,IAAnCC,EAAkC,EAAlCA,QAAST,EAAyB,EAAzBA,KAAMU,EAAmB,EAAnBA,gBACvD,OACE,8BACGD,EAAQE,KAAI,SAAAC,GACX,OAAO,cAACd,EAAD,CAAQC,KAAMa,EAAKZ,KAAMA,EAAgBC,QAASS,GAAdE,QCApC,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOnB,EAAP,KAAYsB,EAAZ,KAmBMC,EAAgB,WACpB,OAAOzB,EAAOC,EAAUC,GAO1B,OACE,sBAAKO,UAAU,MAAf,UACE,cAACb,EAAD,CAASC,MAAM,uBAAf,SACE,cAACkB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BT,KAAK,SACLU,gBA/BY,SAAAS,GAElB,OADaA,EAAEC,OAAOf,MAEpB,IAAK,OACHU,EAAQtB,EAAO,GACf,MACF,IAAK,UACHuB,EAAWtB,EAAU,GACrB,MACF,IAAK,MACHuB,EAAOtB,EAAM,GACb,MACF,QACE,aAqBDuB,IACC,cAAC7B,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,IACPrB,mBAnBDqB,IAAkBG,KAAKC,MAAO7B,EAAOyB,IAAmB,KAAO,MAuBlE,sDClDRK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.537c2e2c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string,\n  // children: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive percentage: {positivePercentage} %</p>\n    </>\n  );\n}\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ text, type, onClick }) {\n  return (\n    <button className={s.button} type={type} name={text} onClick={onClick}>\n      {text[0].toUpperCase() + text.slice(1)}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport Button from '../components/Button';\n\nexport default function FeedbackOptions({ options, type, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(opt => {\n        return <Button text={opt} type={type} key={opt} onClick={onLeaveFeedback} />;\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import './App.css';\nimport Section from './components/Section';\n// import Button from './components/Button';\nimport Statistics from './components/Statistics';\nimport { useState } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = e => {\n    const name = e.target.name;\n    switch (name) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const TotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const PositiveFeedbackPercentage = () => {\n    return TotalFeedback() ? Math.round((good / TotalFeedback()) * 100) : 0;\n  };\n\n  return (\n    <div className=\"app\">\n      <Section title=\"Pease leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          type=\"button\"\n          onLeaveFeedback={handleClick}\n        />\n      </Section>\n      {TotalFeedback() ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={TotalFeedback()}\n            positivePercentage={PositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <p>Not feedback given</p>\n      )}\n    </div>\n  );\n}\n","import 'modern-normalize/modern-normalize.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1UJls\"};"],"sourceRoot":""}